---
- name: Deploy ArgoCD
  hosts: k8s_masters[0]
  become: true
  vars:
    ansible_user: gabs
    kubeconfig: /etc/rancher/k3s/k3s.yaml
  vars_files:
    - git-credentials.yml  # This file should be encrypted with ansible-vault
  
  tasks:
    - name: Create argocd namespace
      kubernetes.core.k8s:
        name: argocd
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: "{{ kubeconfig }}"

    - name: Deploy ArgoCD manifests
      kubernetes.core.k8s:
        state: present
        src: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        namespace: argocd
        kubeconfig: "{{ kubeconfig }}"

    - name: Create Git credentials secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: hl5-private-repo
            namespace: argocd
            labels:
              argocd.argoproj.io/secret-type: repository
          type: Opaque
          stringData:
            type: git
            url: "{{ git_repo }}"
            username: "{{ git_username }}"
            password: "{{ git_token }}"
        kubeconfig: "{{ kubeconfig }}"

    - name: Set ArgoCD server to insecure mode
      kubernetes.core.k8s:
        api_version: v1
        kind: ConfigMap
        name: argocd-cmd-params-cm
        namespace: argocd
        definition:
          data:
            server.insecure: "true"
        merge_type: merge
        kubeconfig: "{{ kubeconfig }}"

    - name: Create ArgoCD Ingress
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: argocd-server-ingress
            namespace: argocd
          spec:
            rules:
              - host: argocd.i.psilva.org
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: argocd-server
                          port:
                            number: 80
        kubeconfig: "{{ kubeconfig }}"

    - name: Restart ArgoCD server deployment
      kubernetes.core.k8s:
        kind: Deployment
        name: argocd-server
        namespace: argocd
        definition:
          spec:
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/restartedAt: "{{ ansible_date_time.iso8601 }}"
        merge_type: strategic-merge
        kubeconfig: "{{ kubeconfig }}"

    - name: Wait for ArgoCD server deployment to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: argocd-server
        namespace: argocd
        kubeconfig: "{{ kubeconfig }}"
      register: argocd_deployment
      until: 
        - argocd_deployment.resources is defined
        - argocd_deployment.resources | length > 0
        - argocd_deployment.resources[0].status is defined
        - argocd_deployment.resources[0].status.readyReplicas is defined
        - argocd_deployment.resources[0].status.readyReplicas > 0
      retries: 30
      delay: 10